{"version":3,"file":"DropdownCheckbox.stories-53b0013c.js","sources":["../../src/components/Dropdown/DropdownCheckbox/CheckboxLight.tsx","../../src/components/Dropdown/DropdownCheckbox/DropdownCheckbox.tsx"],"sourcesContent":["import React, { useRef } from 'react';\nimport { styled, Box, BoxProps } from '@mui/material';\n\nimport CheckBoxSvgIcon from '../../../svg/CheckboxSvgIcon';\n\ninterface ContainerProps {\n  disabled: boolean;\n  isSelected: boolean;\n  selectType: 'none' | 'one' | 'partial' | 'all';\n}\n\nconst Container = styled(Box, {\n  shouldForwardProp: (prop) => {\n    switch (prop) {\n      case 'isSelected':\n      case 'selectType':\n      case 'sx':\n        return false;\n      default:\n        return true;\n    }\n  },\n})<ContainerProps>`\n  cursor: pointer;\n  display: inline-flex;\n  align-items: center;\n  user-select: none;\n  pointer-events: ${({ disabled }) => (disabled ? 'none' : 'auto')};\n\n  &:hover {\n    & > .checkbox {\n      border-color: ${({ theme }) => theme.color.primary.$60};\n    }\n  }\n\n  & > .checkbox {\n    display: block;\n    width: 1.5rem;\n    height: 1.5rem;\n    border: 2px solid ${({ theme }) => theme.color.secondary.$40};\n    border-radius: 4px;\n    margin: 8px;\n    background: ${({ disabled, theme }) =>\n      disabled ? theme.color.secondary.$40 : '#fff'};\n    color: ${({ theme }) => theme.color.primary.$100};\n    opacity: ${({ disabled }) => (disabled ? 0.3 : 1)};\n\n    ${({ isSelected, selectType }) => {\n      if (isSelected && selectType !== 'partial') {\n        return {\n          border: 'none',\n        };\n      }\n      return undefined;\n    }}\n\n    ${({ theme, isSelected, selectType }) => {\n      if (isSelected) {\n        if (selectType === 'partial') {\n          return {\n            padding: '4px',\n            '&:before': {\n              display: 'block',\n              content: '\"\"',\n              width: '100%',\n              height: '100%',\n              background: theme.color.primary.$100,\n              borderRadius: '1px',\n            },\n          };\n        }\n      }\n      return undefined;\n    }};\n  }\n\n  & > label {\n    cursor: pointer;\n    display: inline-block;\n    margin-left: 8px;\n    opacity: ${({ disabled }) => (disabled ? 0.6 : 1)};\n  }\n`;\n\nexport interface CheckboxLightProps extends Omit<BoxProps, 'onChange'> {\n  name?: string;\n  label?: string;\n  checked?: boolean;\n  disabled?: boolean;\n  selectType?: 'none' | 'one' | 'partial' | 'all';\n  value?: any;\n  onChange?: (value: any, checked: boolean) => void;\n}\n\nconst CheckboxLight: React.FC<CheckboxLightProps> = ({\n  name,\n  label,\n  sx,\n  value,\n  checked = false,\n  disabled = false,\n  selectType = 'none',\n  onChange,\n}) => {\n  const checkboxRef = useRef<HTMLInputElement>(null);\n\n  return (\n    <Container\n      ref={checkboxRef}\n      sx={sx}\n      isSelected={checked}\n      disabled={disabled}\n      selectType={selectType}\n      onClick={() => {\n        onChange?.(value, !checked);\n      }}\n      data-cy={`checkbox-list-device-item${disabled ? 'disabled' : ''}`}\n    >\n      <div className=\"checkbox\">\n        {checked && selectType !== 'partial' && (\n          <CheckBoxSvgIcon sx={{ width: '1.5rem', height: '1.5rem' }} />\n        )}\n      </div>\n      {label && <label htmlFor={name}>{label}</label>}\n    </Container>\n  );\n};\n\nexport default CheckboxLight;\n","import KeyboardArrowDown from '@mui/icons-material/KeyboardArrowDown';\nimport KeyboardArrowUp from '@mui/icons-material/KeyboardArrowUp';\nimport Box from '@mui/material/Box';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport Popper from '@mui/material/Popper';\nimport { styled } from '@mui/material/styles';\nimport classNames from 'classnames';\nimport React, { useEffect, useRef, useState } from 'react';\nimport Icon from '../../Icon/Icon';\nimport CheckboxLight from './CheckboxLight';\nimport { DropdownCheckboxProps } from './DropdownColor.type';\n\nconst Root = styled(Box)(({ theme }) => ({\n  ...theme.typography.h3,\n  minWidth: 220,\n  userSelect: 'none',\n  cursor: 'pointer',\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  color: theme.color.secondary.$80,\n  backgroundColor: '#FFF',\n  padding: '8px 0px 8px 16px',\n  borderRadius: 4,\n  '&.dark': {\n    color: 'white',\n    backgroundColor: 'rgba(0, 0 ,0, 0.2)',\n  },\n  '&.Dropdown-empty': {\n    color: theme.color.secondary.$60,\n    '&.dark': {\n      color: theme.color.secondary.$80,\n    },\n  },\n  '&.Dropdown--disabled': {\n    opacity: 0.3,\n    pointerEvents: 'none',\n  },\n}));\n\nconst List = styled(Box)(({ theme }) => ({\n  backgroundColor: '#FFF',\n  margin: '8px auto',\n  borderRadius: 4,\n  boxShadow: '0px 4px 4px rgba(0, 0, 0, 0.1)',\n  '&.dark': {\n    color: 'white',\n    backgroundColor: theme.color.secondary.$100,\n  },\n}));\n\ninterface ItemProps {\n  selected: boolean;\n}\n\nconst Item = styled(Box, { label: 'Dropdown-item' })<ItemProps>(\n  ({ theme, selected }) => ({\n    ...theme.typography.h3,\n    cursor: 'pointer',\n    // display: 'flex',\n    // alignItems: 'center',\n    // lineHeight: 2.5,\n    '&:hover': {\n      backgroundColor: 'rgba(0, 0, 0, .05)',\n    },\n    backgroundColor: selected ? 'rgba(0, 0, 0, .05)' : 'unset',\n  }),\n);\n\nconst ContainerLabel = styled('div')`\n  display: flex;\n  align-items: center;\n  max-width: 320px;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  gap: 10px;\n`;\n\nconst DropdownCheckbox: React.FC<DropdownCheckboxProps> = (props) => {\n  const {\n    list,\n    itemProps,\n    placeholder,\n    selectedIds,\n    disabled,\n    onSelect,\n    popperProps,\n    selectionId,\n\n    mode = 'light',\n    ...otherProps\n  } = props;\n  const selectRef = useRef<HTMLDivElement>(null);\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [itemChecked, setItemChecked] = useState<string[]>([]);\n\n  const handleOnClickSelect = () => {\n    setIsOpen(true);\n  };\n\n  const handleOnClickAway = () => {\n    setIsOpen(false);\n  };\n\n  useEffect(() => {\n    if (selectedIds === undefined || selectedIds.length === 0) {\n      setItemChecked([]);\n    } else {\n      setItemChecked(selectedIds);\n    }\n  }, [selectedIds]);\n\n  const onChangeCheckbox = (value: any, checked: boolean) => {\n    const newValue = value;\n    const updateValue = [...itemChecked];\n\n    if (newValue === 'all' && checked) {\n      const resetValue = [...list.map((l) => l.value as string)];\n      setItemChecked(resetValue);\n      onSelect(resetValue);\n    } else if (newValue === 'all' && !checked) {\n      setItemChecked([]);\n      onSelect([]);\n    } else {\n      const isContainAll = itemChecked.includes('all');\n      if (isContainAll) {\n        if (updateValue.indexOf('all') > -1) {\n          updateValue.splice(updateValue.indexOf('all'), 1);\n        }\n        if (newValue !== 'all') {\n          if (itemChecked.includes(newValue)) {\n            updateValue.splice(updateValue.indexOf(newValue), 1);\n          } else {\n            updateValue.push(newValue);\n          }\n        }\n      } else {\n        if (itemChecked.includes(newValue)) {\n          updateValue.splice(updateValue.indexOf(newValue), 1);\n        } else {\n          updateValue.push(newValue);\n        }\n      }\n\n      setItemChecked(updateValue);\n      onSelect(updateValue);\n    }\n  };\n\n  const items = list\n    .filter((item) => item.id !== selectionId)\n    .map((item) => (\n      <Item\n        key={`dropdown-item-${item.id}`}\n        // className=\"Dropdown-item\"\n        selected={itemChecked.includes(item.value as string)}\n        {...itemProps}\n      >\n        <CheckboxLight\n          checked={\n            itemChecked.includes(item.value as string) ||\n            itemChecked.includes('all')\n          }\n          label={item.name}\n          value={item.value}\n          onChange={onChangeCheckbox}\n        />\n      </Item>\n    ));\n\n  return (\n    <>\n      <Root\n        ref={selectRef}\n        className={classNames(\n          'Dropdown-root',\n          {\n            'Dropdown-empty': !selectedIds,\n          },\n          {\n            'Dropdown--disabled': disabled,\n          },\n          {\n            dark: mode === 'dark',\n            light: mode === 'light',\n          },\n        )}\n        onClick={handleOnClickSelect}\n        {...otherProps}\n      >\n        {itemChecked.includes('all') ? (\n          list.find((d) => d.value === 'all')?.name\n        ) : itemChecked && itemChecked.length > 0 ? (\n          <ContainerLabel>\n            {list\n              .filter((t) => itemChecked.includes(t.value as string))\n              .map((d) => d.name)\n              .join(', ')}\n          </ContainerLabel>\n        ) : (\n          placeholder\n        )}\n\n        <Icon className=\"Dropdown-icon\">\n          {isOpen ? <KeyboardArrowUp /> : <KeyboardArrowDown />}\n        </Icon>\n      </Root>\n      <Popper\n        anchorEl={selectRef.current}\n        open={isOpen}\n        placement=\"bottom\"\n        {...popperProps}\n      >\n        <ClickAwayListener onClickAway={handleOnClickAway}>\n          <List\n            className={classNames({\n              dark: mode === 'dark',\n              light: mode === 'light',\n            })}\n            style={{ width: selectRef.current?.offsetWidth ?? 'auto' }}\n          >\n            {items}\n          </List>\n        </ClickAwayListener>\n      </Popper>\n    </>\n  );\n};\n\nexport default DropdownCheckbox;\n"],"names":["Container","styled","Box","prop","disabled","theme","isSelected","selectType","CheckboxLight","name","label","sx","value","checked","onChange","checkboxRef","useRef","React","CheckBoxSvgIcon","Root","List","Item","selected","ContainerLabel","DropdownCheckbox","props","list","itemProps","placeholder","selectedIds","onSelect","popperProps","selectionId","mode","otherProps","selectRef","isOpen","setIsOpen","useState","itemChecked","setItemChecked","handleOnClickSelect","handleOnClickAway","useEffect","onChangeCheckbox","newValue","updateValue","resetValue","l","items","item","classNames","_a","d","t","Icon","KeyboardArrowUp","KeyboardArrowDown","Popper","ClickAwayListener","_b"],"mappings":"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"}