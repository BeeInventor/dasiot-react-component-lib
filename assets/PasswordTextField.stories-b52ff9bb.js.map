{"version":3,"file":"PasswordTextField.stories-b52ff9bb.js","sources":["../../src/svg/ComponentIcPasswordDbg.tsx","../../src/components/TextField/PasswordTextField/PasswordTextField.tsx"],"sourcesContent":["import React, { CSSProperties, VFC } from 'react';\nimport SvgIcon, { SvgIconProps } from '@mui/material/SvgIcon';\n\ninterface Props {\n  width?: CSSProperties['width'];\n  height?: CSSProperties['height'];\n}\n\nconst ComponentIcPasswordDbg: VFC<Props & Omit<SvgIconProps, keyof Props>> = (\n  props,\n) => {\n  const { viewBox = '0 0 40 40', ...otherProps } = props;\n\n  return (\n    <SvgIcon\n      viewBox={viewBox}\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      sx={{\n        width: props.width ?? 40,\n        height: props.height ?? 40,\n      }}\n      {...otherProps}\n    >\n      <path\n        d=\"M14 18H26V28H14V18Z\"\n        stroke=\"white\"\n        strokeWidth=\"2\"\n        strokeLinejoin=\"round\"\n        fill=\"none\"\n      />\n      <path\n        d=\"M16 18V16C16 13.7909 17.7909 12 20 12C22.2091 12 24 13.7909 24 16V18\"\n        stroke=\"white\"\n        strokeWidth=\"2\"\n        fill=\"none\"\n      />\n    </SvgIcon>\n  );\n};\n\nexport default ComponentIcPasswordDbg;\n","import React, { VFC, ChangeEvent, useState } from 'react';\nimport classnames from 'classnames';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport InputBase from '@mui/material/InputBase';\nimport { PasswordTextFieldProps } from './PasswordTextField.types';\nimport ComponentIcPasswordDbg from '../../../svg/ComponentIcPasswordDbg';\nimport IcErrorIfo from '../../../svg/IcErrorIfo';\n\nconst DEFAULT_WIDTH = 320;\nconst DEFAULT_HEIGHT = 50;\n\nconst Root = styled(Box)(({}) => ({\n  display: 'flex',\n  flexDirection: 'column',\n}));\n\nconst TextField = styled(Box)(({ theme }) => ({\n  ...theme.typography.body1,\n  display: 'flex',\n  alignItems: 'center',\n  minWidth: DEFAULT_WIDTH,\n  height: DEFAULT_HEIGHT,\n  minHeight: DEFAULT_HEIGHT,\n  color: '#FFFFFF',\n  backgroundColor: 'rgba(0, 0, 0, .5)',\n  borderRadius: 4,\n  padding: '13px 24px',\n  '&.container--error': {\n    border: `1px solid ${theme.color.highlight}`,\n  },\n}));\n\nconst Input = styled(InputBase)(({ theme }) => ({\n  ...theme.typography.body1,\n  flex: 1,\n  color: 'white',\n  backgroundColor: 'transparent',\n  outline: 'none',\n  border: 'none',\n  '&::placeholder': {\n    color: '#9C9C9C',\n  },\n}));\n\nconst ErrorMessage = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  ...theme.typography.caption,\n  color: theme.color.highlight,\n}));\n\nconst PasswordTextField: VFC<PasswordTextFieldProps> = (props) => {\n  const {\n    rootProps,\n    inputProps,\n    errorProps,\n    placeholder,\n    onChange,\n    error,\n    errorMessage,\n    ...otherProps\n  } = props;\n  const [inputValue, setInputValue] = useState('');\n\n  const handleInputOnChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const v = e.target.value;\n    setInputValue(v);\n    onChange(v);\n  };\n\n  return (\n    <Root {...rootProps}>\n      <TextField\n        className={classnames({\n          'container--error': error,\n        })}\n        {...otherProps}\n      >\n        <ComponentIcPasswordDbg style={{ marginRight: 6 }} />\n        <Input\n          type=\"password\"\n          name=\"password\"\n          placeholder={placeholder}\n          value={inputValue}\n          onChange={handleInputOnChange}\n          {...inputProps}\n        />\n      </TextField>\n      {error && (\n        <ErrorMessage {...errorProps}>\n          <IcErrorIfo /> {errorMessage}\n        </ErrorMessage>\n      )}\n    </Root>\n  );\n};\n\nexport default PasswordTextField;\n"],"names":["ComponentIcPasswordDbg","props","viewBox","otherProps","React","SvgIcon","DEFAULT_WIDTH","DEFAULT_HEIGHT","Root","styled","Box","TextField","theme","Input","InputBase","ErrorMessage","PasswordTextField","rootProps","inputProps","errorProps","placeholder","onChange","error","errorMessage","inputValue","setInputValue","useState","handleInputOnChange","e","v","classnames","IcErrorIfo","PasswordTextField$1"],"mappings":"uzBAQA,MAAMA,EACJC,GACG,CACH,KAAM,CAAE,QAAAC,EAAU,YAAa,GAAGC,GAAeF,EAG/C,OAAAG,EAAA,cAACC,EAAA,CACC,QAAAH,EACA,KAAK,OACL,MAAM,6BACN,GAAI,CACF,MAAOD,EAAM,OAAS,GACtB,OAAQA,EAAM,QAAU,EAC1B,EACC,GAAGE,CAAA,EAEJC,EAAA,cAAC,OAAA,CACC,EAAE,sBACF,OAAO,QACP,YAAY,IACZ,eAAe,QACf,KAAK,MAAA,CACP,EACAA,EAAA,cAAC,OAAA,CACC,EAAE,uEACF,OAAO,QACP,YAAY,IACZ,KAAK,MAAA,CACP,CAAA,CAGN,EC9BME,EAAgB,IAChBC,EAAiB,GAEjBC,EAAOC,EAAOC,CAAG,EAAE,CAAC,CAAA,KAAQ,CAChC,QAAS,OACT,cAAe,QACjB,EAAE,EAEIC,EAAYF,EAAOC,CAAG,EAAE,CAAC,CAAE,MAAAE,MAAa,CAC5C,GAAGA,EAAM,WAAW,MACpB,QAAS,OACT,WAAY,SACZ,SAAUN,EACV,OAAQC,EACR,UAAWA,EACX,MAAO,UACP,gBAAiB,oBACjB,aAAc,EACd,QAAS,YACT,qBAAsB,CACpB,OAAQ,aAAaK,EAAM,MAAM,WACnC,CACF,EAAE,EAEIC,EAAQJ,EAAOK,CAAS,EAAE,CAAC,CAAE,MAAAF,MAAa,CAC9C,GAAGA,EAAM,WAAW,MACpB,KAAM,EACN,MAAO,QACP,gBAAiB,cACjB,QAAS,OACT,OAAQ,OACR,iBAAkB,CAChB,MAAO,SACT,CACF,EAAE,EAEIG,EAAeN,EAAOC,CAAG,EAAE,CAAC,CAAE,MAAAE,MAAa,CAC/C,QAAS,OACT,eAAgB,SAChB,WAAY,SACZ,GAAGA,EAAM,WAAW,QACpB,MAAOA,EAAM,MAAM,SACrB,EAAE,EAEII,EAAkDf,GAAU,CAC1D,KAAA,CACJ,UAAAgB,EACA,WAAAC,EACA,WAAAC,EACA,YAAAC,EACA,SAAAC,EACA,MAAAC,EACA,aAAAC,EACA,GAAGpB,CACD,EAAAF,EACE,CAACuB,EAAYC,CAAa,EAAIC,WAAS,EAAE,EAEzCC,EAAuBC,GAAqC,CAC1D,MAAAC,EAAID,EAAE,OAAO,MACnBH,EAAcI,CAAC,EACfR,EAASQ,CAAC,CAAA,EAIV,OAAAzB,EAAA,cAACI,EAAM,CAAA,GAAGS,CACR,EAAAb,EAAA,cAACO,EAAA,CACC,UAAWmB,EAAW,CACpB,mBAAoBR,CAAA,CACrB,EACA,GAAGnB,CAAA,kBAEHH,EAAuB,CAAA,MAAO,CAAE,YAAa,GAAK,EACnDI,EAAA,cAACS,EAAA,CACC,KAAK,WACL,KAAK,WACL,YAAAO,EACA,MAAOI,EACP,SAAUG,EACT,GAAGT,CAAA,CACN,CAAA,EAEDI,GACClB,EAAA,cAACW,EAAc,CAAA,GAAGI,CAChB,EAAAf,EAAA,cAAC2B,EAAW,IAAA,EAAE,IAAER,CAClB,CAEJ,CAEJ,EAEAS,EAAehB"}