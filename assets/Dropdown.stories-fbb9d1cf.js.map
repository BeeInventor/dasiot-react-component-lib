{"version":3,"file":"Dropdown.stories-fbb9d1cf.js","sources":["../../src/components/Dropdown/Dropdown.tsx","../../src/components/Dropdown/DropdownV2.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport classNames from 'classnames';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport KeyboardArrowDown from '@mui/icons-material/KeyboardArrowDown';\nimport KeyboardArrowUp from '@mui/icons-material/KeyboardArrowUp';\nimport Popper from '@mui/material/Popper';\nimport { DropDownItem, DropDownProps } from './Dropdown.type';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport Icon from '../Icon/Icon';\nimport CheckSvg from '../../assets/image/svg/check.svg';\n\nconst Root = styled(Box)(({ theme }) => ({\n  ...theme.typography.h3,\n  minWidth: 220,\n  userSelect: 'none',\n  cursor: 'pointer',\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  color: theme.color.secondary.$80,\n  backgroundColor: '#FFF',\n  padding: '8px 0px 8px 16px',\n  borderRadius: 4,\n  '&.dark': {\n    color: 'white',\n    backgroundColor: 'rgba(0, 0 ,0, 0.2)',\n  },\n  '&.Dropdown-empty': {\n    color: theme.color.secondary.$60,\n    '&.dark': {\n      color: theme.color.secondary.$80,\n    },\n  },\n  '&.Dropdown--disabled': {\n    opacity: 0.3,\n    pointerEvents: 'none',\n  },\n}));\n\nconst List = styled(Box)(({ theme }) => ({\n  backgroundColor: '#FFF',\n  margin: '8px auto',\n  borderRadius: 4,\n  boxShadow: '0px 4px 4px rgba(0, 0, 0, 0.1)',\n  '&.dark': {\n    color: 'white',\n    backgroundColor: theme.color.secondary.$100,\n  },\n}));\n\ninterface ItemProps {\n  isExceptance?: boolean;\n}\n\nconst Item = styled(Box, {\n  label: 'Dropdown-item',\n  shouldForwardProp: (prop) => prop !== 'isExceptance',\n})<ItemProps>(({ theme, isExceptance }) => ({\n  ...theme.typography.h3,\n  cursor: 'pointer',\n  display: 'flex',\n  alignItems: 'center',\n  lineHeight: 2.5,\n  position: 'relative',\n  '&:hover': {\n    backgroundColor: 'rgba(0, 0, 0, .05)',\n  },\n  '&:before': {\n    content: '\"\"',\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    height: '1px',\n    width: '90%',\n    margin: 'auto',\n    borderBottom: isExceptance\n      ? `1px solid ${theme.color.secondary.$40}`\n      : 'none',\n  },\n}));\n\nconst Dropdown: React.VFC<DropDownProps> = (props) => {\n  const {\n    list,\n    isExceptance,\n    itemProps,\n    placeholder,\n    selectedId,\n    disabled,\n    onSelect,\n    popperProps,\n    selectionIds,\n    mode = 'light',\n    ...otherProps\n  } = props;\n  const selectRef = useRef<HTMLDivElement>(null);\n  const [selectedItem, setSelectedItem] = useState<DropDownItem | null>(null);\n  const [isOpen, setIsOpen] = useState(false);\n\n  useEffect(() => {\n    if (selectedId && selectedId !== selectedItem?.id) {\n      for (let i = 0; i < list.length; i++) {\n        if (selectedId === list[i].id) {\n          setSelectedItem(list[i]);\n          break;\n        }\n      }\n    } else if (selectedId === undefined) {\n      setSelectedItem(null);\n    }\n  }, [selectedId]);\n\n  useEffect(() => {\n    for (let i = 0; i < list.length; i++) {\n      if (selectedId === list[i].id) {\n        setSelectedItem(list[i]);\n        break;\n      }\n    }\n  }, [list]);\n\n  const handleOnClickSelect = () => {\n    setIsOpen(true);\n  };\n\n  const handleOnClickAway = () => {\n    setIsOpen(false);\n  };\n\n  const handleOnClick = (item: DropDownItem) => {\n    setIsOpen(false);\n    setSelectedItem(item);\n    onSelect(item.value, item);\n  };\n\n  const items = list\n    .filter((item) => !selectionIds?.includes(item.id))\n    .map((item, i) => (\n      <Item\n        key={`dropdown-item-${item.id}`}\n        className=\"Dropdown-item\"\n        onClick={() => handleOnClick(item)}\n        isExceptance={isExceptance && i === 0}\n        {...itemProps}\n      >\n        <Icon className=\"Dropdown-icon\">\n          {selectedItem?.id === item.id && <img src={CheckSvg} />}\n        </Icon>\n        {item.name}\n      </Item>\n    ));\n\n  return (\n    <>\n      <Root\n        ref={selectRef}\n        className={classNames(\n          'Dropdown-root',\n          {\n            'Dropdown-empty': !selectedItem,\n          },\n          {\n            'Dropdown--disabled': disabled,\n          },\n          {\n            dark: mode === 'dark',\n            light: mode === 'light',\n          },\n        )}\n        onClick={handleOnClickSelect}\n        {...otherProps}\n      >\n        {selectedItem?.name ?? placeholder}\n        <Icon className=\"Dropdown-icon\">\n          {isOpen ? <KeyboardArrowUp /> : <KeyboardArrowDown />}\n        </Icon>\n      </Root>\n      <Popper\n        anchorEl={selectRef.current}\n        open={isOpen}\n        placement=\"bottom\"\n        {...popperProps}\n      >\n        <ClickAwayListener onClickAway={handleOnClickAway}>\n          <List\n            className={classNames({\n              dark: mode === 'dark',\n              light: mode === 'light',\n            })}\n            style={{ width: selectRef.current?.offsetWidth ?? 'auto' }}\n          >\n            {items}\n          </List>\n        </ClickAwayListener>\n      </Popper>\n    </>\n  );\n};\n\nexport default Dropdown;\n","import React, { useState, useEffect, useRef } from 'react';\nimport classNames from 'classnames';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport KeyboardArrowDown from '@mui/icons-material/KeyboardArrowDown';\nimport KeyboardArrowUp from '@mui/icons-material/KeyboardArrowUp';\nimport Popper from '@mui/material/Popper';\nimport { DropDownItem, DropDownProps } from './Dropdown.type';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport Icon from '../Icon/Icon';\nimport CheckSvg from '../../assets/image/svg/check.svg';\n\nconst Root = styled(Box)(({ theme }) => ({\n  ...theme.typography.h3,\n  minWidth: 220,\n  userSelect: 'none',\n  cursor: 'pointer',\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  color: theme.color.secondary.$80,\n  backgroundColor: '#FFF',\n  padding: '8px 0px 8px 16px',\n  borderRadius: 4,\n  '&.dark': {\n    color: 'white',\n    backgroundColor: 'rgba(0, 0 ,0, 0.2)',\n  },\n  '&.Dropdown-empty': {\n    color: theme.color.secondary.$60,\n    '&.dark': {\n      color: theme.color.secondary.$80,\n    },\n  },\n  '&.Dropdown--disabled': {\n    opacity: 0.3,\n    pointerEvents: 'none',\n  },\n}));\n\nconst List = styled(Box)(({ theme }) => ({\n  backgroundColor: '#FFF',\n  margin: '8px auto',\n  borderRadius: 4,\n  boxShadow: '0px 4px 4px rgba(0, 0, 0, 0.1)',\n  '&.dark': {\n    color: 'white',\n    backgroundColor: theme.color.secondary.$100,\n  },\n}));\n\nconst Item = styled(Box, { label: 'Dropdown-item' })(({ theme }) => ({\n  ...theme.typography.h3,\n  cursor: 'pointer',\n  display: 'flex',\n  alignItems: 'center',\n  lineHeight: 2.5,\n  '&:hover': {\n    backgroundColor: 'rgba(0, 0, 0, .05)',\n  },\n}));\n\nconst DropdownV2: React.VFC<DropDownProps> = (props) => {\n  const {\n    list,\n    itemProps,\n    placeholder,\n    selectedId,\n    disabled,\n    onSelect,\n    popperProps,\n    selectionId,\n    mode = 'light',\n    ...otherProps\n  } = props;\n  const selectRef = useRef<HTMLDivElement>(null);\n  const [selectedItem, setSelectedItem] = useState<DropDownItem | null>(null);\n  const [isOpen, setIsOpen] = useState(false);\n\n  useEffect(() => {\n    if (selectedId && selectedId !== selectedItem?.id) {\n      for (let i = 0; i < list.length; i++) {\n        if (selectedId === list[i].id) {\n          setSelectedItem(list[i]);\n          break;\n        }\n      }\n    } else if (selectedId === undefined) {\n      setSelectedItem(null);\n    }\n  }, [selectedId]);\n\n  useEffect(() => {\n    for (let i = 0; i < list.length; i++) {\n      if (selectedId === list[i].id) {\n        setSelectedItem(list[i]);\n        break;\n      }\n    }\n  }, [list]);\n\n  const handleOnClickSelect = () => {\n    setIsOpen(true);\n  };\n\n  const handleOnClickAway = () => {\n    setIsOpen(false);\n  };\n\n  const handleOnClick = (item: DropDownItem) => {\n    setIsOpen(false);\n    onSelect(item.value, item);\n  };\n\n  const items = list\n    .filter((item) => item.id !== selectionId)\n    .map((item) => (\n      <Item\n        key={`dropdown-item-${item.id}`}\n        className=\"Dropdown-item\"\n        onClick={() => handleOnClick(item)}\n        {...itemProps}\n      >\n        <Icon className=\"Dropdown-icon\">\n          {selectedItem?.id === item.id && <img src={CheckSvg} />}\n        </Icon>\n        {item.name}\n      </Item>\n    ));\n\n  return (\n    <>\n      <Root\n        ref={selectRef}\n        className={classNames(\n          'Dropdown-root',\n          {\n            'Dropdown-empty': !selectedId,\n          },\n          {\n            'Dropdown--disabled': disabled,\n          },\n          {\n            dark: mode === 'dark',\n            light: mode === 'light',\n          },\n        )}\n        onClick={handleOnClickSelect}\n        {...otherProps}\n      >\n        {selectedItem?.name ?? placeholder}\n        <Icon className=\"Dropdown-icon\">\n          {isOpen ? <KeyboardArrowUp /> : <KeyboardArrowDown />}\n        </Icon>\n      </Root>\n      <Popper\n        anchorEl={selectRef.current}\n        open={isOpen}\n        placement=\"bottom\"\n        {...popperProps}\n      >\n        <ClickAwayListener onClickAway={handleOnClickAway}>\n          <List\n            className={classNames({\n              dark: mode === 'dark',\n              light: mode === 'light',\n            })}\n            style={{ width: selectRef.current?.offsetWidth ?? 'auto' }}\n          >\n            {items}\n          </List>\n        </ClickAwayListener>\n      </Popper>\n    </>\n  );\n};\n\nexport default DropdownV2;\n"],"names":["Root","styled","Box","theme","List","Item","prop","isExceptance","Dropdown","props","list","itemProps","placeholder","selectedId","disabled","onSelect","popperProps","selectionIds","mode","otherProps","selectRef","useRef","selectedItem","setSelectedItem","useState","isOpen","setIsOpen","useEffect","i","handleOnClickSelect","handleOnClickAway","handleOnClick","item","items","React","Icon","CheckSvg","classNames","KeyboardArrowUp","KeyboardArrowDown","Popper","ClickAwayListener","_a","DropdownV2","selectionId"],"mappings":"utCAYA,MAAMA,GAAOC,EAAOC,CAAG,EAAE,CAAC,CAAE,MAAAC,MAAa,CACvC,GAAGA,EAAM,WAAW,GACpB,SAAU,IACV,WAAY,OACZ,OAAQ,UACR,QAAS,OACT,eAAgB,gBAChB,WAAY,SACZ,MAAOA,EAAM,MAAM,UAAU,IAC7B,gBAAiB,OACjB,QAAS,mBACT,aAAc,EACd,SAAU,CACR,MAAO,QACP,gBAAiB,oBACnB,EACA,mBAAoB,CAClB,MAAOA,EAAM,MAAM,UAAU,IAC7B,SAAU,CACR,MAAOA,EAAM,MAAM,UAAU,GAC/B,CACF,EACA,uBAAwB,CACtB,QAAS,GACT,cAAe,MACjB,CACF,EAAE,EAEIC,GAAOH,EAAOC,CAAG,EAAE,CAAC,CAAE,MAAAC,MAAa,CACvC,gBAAiB,OACjB,OAAQ,WACR,aAAc,EACd,UAAW,iCACX,SAAU,CACR,MAAO,QACP,gBAAiBA,EAAM,MAAM,UAAU,IACzC,CACF,EAAE,EAMIE,GAAOJ,EAAOC,EAAK,CACvB,MAAO,gBACP,kBAAoBI,GAASA,IAAS,cACxC,CAAC,EAAa,CAAC,CAAE,MAAAH,EAAO,aAAAI,MAAoB,CAC1C,GAAGJ,EAAM,WAAW,GACpB,OAAQ,UACR,QAAS,OACT,WAAY,SACZ,WAAY,IACZ,SAAU,WACV,UAAW,CACT,gBAAiB,oBACnB,EACA,WAAY,CACV,QAAS,KACT,SAAU,WACV,KAAM,EACN,MAAO,EACP,OAAQ,EACR,OAAQ,MACR,MAAO,MACP,OAAQ,OACR,aAAcI,EACV,aAAaJ,EAAM,MAAM,UAAU,GAAG,GACtC,MACN,CACF,EAAE,EAEIK,EAAsCC,GAAU,OAC9C,KAAA,CACJ,KAAAC,EACA,aAAAH,EACA,UAAAI,EACA,YAAAC,EACA,WAAAC,EACA,SAAAC,EACA,SAAAC,EACA,YAAAC,EACA,aAAAC,EACA,KAAAC,EAAO,QACP,GAAGC,CACD,EAAAV,EACEW,EAAYC,SAAuB,IAAI,EACvC,CAACC,EAAcC,CAAe,EAAIC,WAA8B,IAAI,EACpE,CAACC,EAAQC,CAAS,EAAIF,WAAS,EAAK,EAE1CG,EAAAA,UAAU,IAAM,CACV,GAAAd,GAAcA,KAAeS,GAAA,YAAAA,EAAc,KAC7C,QAASM,EAAI,EAAGA,EAAIlB,EAAK,OAAQkB,IAC/B,GAAIf,IAAeH,EAAKkB,CAAC,EAAE,GAAI,CACbL,EAAAb,EAAKkB,CAAC,CAAC,EACvB,KACF,OAEOf,IAAe,QACxBU,EAAgB,IAAI,CACtB,EACC,CAACV,CAAU,CAAC,EAEfc,EAAAA,UAAU,IAAM,CACd,QAASC,EAAI,EAAGA,EAAIlB,EAAK,OAAQkB,IAC/B,GAAIf,IAAeH,EAAKkB,CAAC,EAAE,GAAI,CACbL,EAAAb,EAAKkB,CAAC,CAAC,EACvB,KACF,CACF,EACC,CAAClB,CAAI,CAAC,EAET,MAAMmB,EAAsB,IAAM,CAChCH,EAAU,EAAI,CAAA,EAGVI,EAAoB,IAAM,CAC9BJ,EAAU,EAAK,CAAA,EAGXK,EAAiBC,GAAuB,CAC5CN,EAAU,EAAK,EACfH,EAAgBS,CAAI,EACXjB,EAAAiB,EAAK,MAAOA,CAAI,CAAA,EAGrBC,EAAQvB,EACX,OAAQsB,GAAS,EAACf,GAAA,MAAAA,EAAc,SAASe,EAAK,IAAG,EACjD,IAAI,CAACA,EAAMJ,KACVM,EAAA,cAAC7B,GAAA,CACC,IAAK,iBAAiB2B,EAAK,EAAE,GAC7B,UAAU,gBACV,QAAS,IAAMD,EAAcC,CAAI,EACjC,aAAczB,GAAgBqB,KAAM,EACnC,GAAGjB,CAAA,EAEHuB,EAAA,cAAAC,EAAA,CAAK,UAAU,eAAA,GACbb,GAAA,YAAAA,EAAc,MAAOU,EAAK,IAAOE,EAAA,cAAA,MAAA,CAAI,IAAKE,EAAA,CAAU,CACvD,EACCJ,EAAK,IAAA,CAET,EAEH,OAEIE,EAAA,cAAAA,EAAA,SAAA,KAAAA,EAAA,cAAClC,GAAA,CACC,IAAKoB,EACL,UAAWiB,EACT,gBACA,CACE,iBAAkB,CAACf,CACrB,EACA,CACE,qBAAsBR,CACxB,EACA,CACE,KAAMI,IAAS,OACf,MAAOA,IAAS,OAClB,CACF,EACA,QAASW,EACR,GAAGV,CAAA,GAEHG,GAAA,YAAAA,EAAc,OAAQV,EACvBsB,EAAA,cAACC,EAAK,CAAA,UAAU,eACb,EAAAV,kBAAUa,GAAgB,IAAA,EAAMJ,EAAA,cAAAK,GAAA,IAAkB,CACrD,CAEF,EAAAL,EAAA,cAACM,GAAA,CACC,SAAUpB,EAAU,QACpB,KAAMK,EACN,UAAU,SACT,GAAGT,CAAA,EAEJkB,EAAA,cAACO,GAAkB,CAAA,YAAaX,CAC9B,EAAAI,EAAA,cAAC9B,GAAA,CACC,UAAWiC,EAAW,CACpB,KAAMnB,IAAS,OACf,MAAOA,IAAS,OAAA,CACjB,EACD,MAAO,CAAE,QAAOwB,EAAAtB,EAAU,UAAV,YAAAsB,EAAmB,cAAe,MAAO,CAAA,EAExDT,CAAA,CAEL,CAAA,CAEJ,CAEJ,EC3LMjC,GAAOC,EAAOC,CAAG,EAAE,CAAC,CAAE,MAAAC,MAAa,CACvC,GAAGA,EAAM,WAAW,GACpB,SAAU,IACV,WAAY,OACZ,OAAQ,UACR,QAAS,OACT,eAAgB,gBAChB,WAAY,SACZ,MAAOA,EAAM,MAAM,UAAU,IAC7B,gBAAiB,OACjB,QAAS,mBACT,aAAc,EACd,SAAU,CACR,MAAO,QACP,gBAAiB,oBACnB,EACA,mBAAoB,CAClB,MAAOA,EAAM,MAAM,UAAU,IAC7B,SAAU,CACR,MAAOA,EAAM,MAAM,UAAU,GAC/B,CACF,EACA,uBAAwB,CACtB,QAAS,GACT,cAAe,MACjB,CACF,EAAE,EAEIC,GAAOH,EAAOC,CAAG,EAAE,CAAC,CAAE,MAAAC,MAAa,CACvC,gBAAiB,OACjB,OAAQ,WACR,aAAc,EACd,UAAW,iCACX,SAAU,CACR,MAAO,QACP,gBAAiBA,EAAM,MAAM,UAAU,IACzC,CACF,EAAE,EAEIE,GAAOJ,EAAOC,EAAK,CAAE,MAAO,gBAAiB,EAAE,CAAC,CAAE,MAAAC,MAAa,CACnE,GAAGA,EAAM,WAAW,GACpB,OAAQ,UACR,QAAS,OACT,WAAY,SACZ,WAAY,IACZ,UAAW,CACT,gBAAiB,oBACnB,CACF,EAAE,EAEIwC,GAAwClC,GAAU,OAChD,KAAA,CACJ,KAAAC,EACA,UAAAC,EACA,YAAAC,EACA,WAAAC,EACA,SAAAC,EACA,SAAAC,EACA,YAAAC,EACA,YAAA4B,EACA,KAAA1B,EAAO,QACP,GAAGC,CACD,EAAAV,EACEW,EAAYC,SAAuB,IAAI,EACvC,CAACC,EAAcC,CAAe,EAAIC,WAA8B,IAAI,EACpE,CAACC,EAAQC,CAAS,EAAIF,WAAS,EAAK,EAE1CG,EAAAA,UAAU,IAAM,CACV,GAAAd,GAAcA,KAAeS,GAAA,YAAAA,EAAc,KAC7C,QAASM,EAAI,EAAGA,EAAIlB,EAAK,OAAQkB,IAC/B,GAAIf,IAAeH,EAAKkB,CAAC,EAAE,GAAI,CACbL,EAAAb,EAAKkB,CAAC,CAAC,EACvB,KACF,OAEOf,IAAe,QACxBU,EAAgB,IAAI,CACtB,EACC,CAACV,CAAU,CAAC,EAEfc,EAAAA,UAAU,IAAM,CACd,QAASC,EAAI,EAAGA,EAAIlB,EAAK,OAAQkB,IAC/B,GAAIf,IAAeH,EAAKkB,CAAC,EAAE,GAAI,CACbL,EAAAb,EAAKkB,CAAC,CAAC,EACvB,KACF,CACF,EACC,CAAClB,CAAI,CAAC,EAET,MAAMmB,EAAsB,IAAM,CAChCH,EAAU,EAAI,CAAA,EAGVI,EAAoB,IAAM,CAC9BJ,EAAU,EAAK,CAAA,EAGXK,EAAiBC,GAAuB,CAC5CN,EAAU,EAAK,EACNX,EAAAiB,EAAK,MAAOA,CAAI,CAAA,EAGrBC,EAAQvB,EACX,OAAQsB,GAASA,EAAK,KAAOY,CAAW,EACxC,IAAKZ,GACJE,EAAA,cAAC7B,GAAA,CACC,IAAK,iBAAiB2B,EAAK,EAAE,GAC7B,UAAU,gBACV,QAAS,IAAMD,EAAcC,CAAI,EAChC,GAAGrB,CAAA,EAEHuB,EAAA,cAAAC,EAAA,CAAK,UAAU,eAAA,GACbb,GAAA,YAAAA,EAAc,MAAOU,EAAK,IAAOE,EAAA,cAAA,MAAA,CAAI,IAAKE,EAAA,CAAU,CACvD,EACCJ,EAAK,IAAA,CAET,EAEH,OAEIE,EAAA,cAAAA,EAAA,SAAA,KAAAA,EAAA,cAAClC,GAAA,CACC,IAAKoB,EACL,UAAWiB,EACT,gBACA,CACE,iBAAkB,CAACxB,CACrB,EACA,CACE,qBAAsBC,CACxB,EACA,CACE,KAAMI,IAAS,OACf,MAAOA,IAAS,OAClB,CACF,EACA,QAASW,EACR,GAAGV,CAAA,GAEHG,GAAA,YAAAA,EAAc,OAAQV,EACvBsB,EAAA,cAACC,EAAK,CAAA,UAAU,eACb,EAAAV,kBAAUa,GAAgB,IAAA,EAAMJ,EAAA,cAAAK,GAAA,IAAkB,CACrD,CAEF,EAAAL,EAAA,cAACM,GAAA,CACC,SAAUpB,EAAU,QACpB,KAAMK,EACN,UAAU,SACT,GAAGT,CAAA,EAEJkB,EAAA,cAACO,GAAkB,CAAA,YAAaX,CAC9B,EAAAI,EAAA,cAAC9B,GAAA,CACC,UAAWiC,EAAW,CACpB,KAAMnB,IAAS,OACf,MAAOA,IAAS,OAAA,CACjB,EACD,MAAO,CAAE,QAAOwB,EAAAtB,EAAU,UAAV,YAAAsB,EAAmB,cAAe,MAAO,CAAA,EAExDT,CAAA,CAEL,CAAA,CAEJ,CAEJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}