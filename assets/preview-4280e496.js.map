{"version":3,"file":"preview-4280e496.js","sources":["../../node_modules/@mui/private-theming/useTheme/ThemeContext.js","../../node_modules/@mui/private-theming/useTheme/useTheme.js","../../node_modules/@mui/private-theming/ThemeProvider/nested.js","../../node_modules/@mui/private-theming/ThemeProvider/ThemeProvider.js","../../node_modules/@mui/system/esm/ThemeProvider/ThemeProvider.js","../../node_modules/@mui/material/styles/ThemeProvider.js","../../node_modules/@mui/material/CssBaseline/CssBaseline.js","../../.storybook/preview.tsx"],"sourcesContent":["import * as React from 'react';\nconst ThemeContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== 'production') {\n  ThemeContext.displayName = 'ThemeContext';\n}\nexport default ThemeContext;","import * as React from 'react';\nimport ThemeContext from './ThemeContext';\nexport default function useTheme() {\n  const theme = React.useContext(ThemeContext);\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue(theme);\n  }\n  return theme;\n}","const hasSymbol = typeof Symbol === 'function' && Symbol.for;\nexport default hasSymbol ? Symbol.for('mui.nested') : '__THEME_NESTED__';","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp } from '@mui/utils';\nimport ThemeContext from '../useTheme/ThemeContext';\nimport useTheme from '../useTheme';\nimport nested from './nested';\n\n// To support composition of theme.\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction mergeOuterLocalTheme(outerTheme, localTheme) {\n  if (typeof localTheme === 'function') {\n    const mergedTheme = localTheme(outerTheme);\n    if (process.env.NODE_ENV !== 'production') {\n      if (!mergedTheme) {\n        console.error(['MUI: You should return an object from your theme function, i.e.', '<ThemeProvider theme={() => ({})} />'].join('\\n'));\n      }\n    }\n    return mergedTheme;\n  }\n  return {\n    ...outerTheme,\n    ...localTheme\n  };\n}\n\n/**\n * This component takes a `theme` prop.\n * It makes the `theme` available down the React tree thanks to React context.\n * This component should preferably be used at **the root of your component tree**.\n */\nfunction ThemeProvider(props) {\n  const {\n    children,\n    theme: localTheme\n  } = props;\n  const outerTheme = useTheme();\n  if (process.env.NODE_ENV !== 'production') {\n    if (outerTheme === null && typeof localTheme === 'function') {\n      console.error(['MUI: You are providing a theme function prop to the ThemeProvider component:', '<ThemeProvider theme={outerTheme => outerTheme} />', '', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\\n'));\n    }\n  }\n  const theme = React.useMemo(() => {\n    const output = outerTheme === null ? localTheme : mergeOuterLocalTheme(outerTheme, localTheme);\n    if (output != null) {\n      output[nested] = outerTheme !== null;\n    }\n    return output;\n  }, [localTheme, outerTheme]);\n  return /*#__PURE__*/_jsx(ThemeContext.Provider, {\n    value: theme,\n    children: children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\nexport default ThemeProvider;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider as MuiThemeProvider, useTheme as usePrivateTheme } from '@mui/private-theming';\nimport { exactProp } from '@mui/utils';\nimport { ThemeContext as StyledEngineThemeContext } from '@mui/styled-engine';\nimport useThemeWithoutDefault from '../useThemeWithoutDefault';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst EMPTY_THEME = {};\nfunction useThemeScoping(themeId, upperTheme, localTheme, isPrivate = false) {\n  return React.useMemo(() => {\n    const resolvedTheme = themeId ? upperTheme[themeId] || upperTheme : upperTheme;\n    if (typeof localTheme === 'function') {\n      const mergedTheme = localTheme(resolvedTheme);\n      const result = themeId ? _extends({}, upperTheme, {\n        [themeId]: mergedTheme\n      }) : mergedTheme;\n      // must return a function for the private theme to NOT merge with the upper theme.\n      // see the test case \"use provided theme from a callback\" in ThemeProvider.test.js\n      if (isPrivate) {\n        return () => result;\n      }\n      return result;\n    }\n    return themeId ? _extends({}, upperTheme, {\n      [themeId]: localTheme\n    }) : _extends({}, upperTheme, localTheme);\n  }, [themeId, upperTheme, localTheme, isPrivate]);\n}\n\n/**\n * This component makes the `theme` available down the React tree.\n * It should preferably be used at **the root of your component tree**.\n *\n * <ThemeProvider theme={theme}> // existing use case\n * <ThemeProvider theme={{ id: theme }}> // theme scoping\n */\nfunction ThemeProvider(props) {\n  const {\n    children,\n    theme: localTheme,\n    themeId\n  } = props;\n  const upperTheme = useThemeWithoutDefault(EMPTY_THEME);\n  const upperPrivateTheme = usePrivateTheme() || EMPTY_THEME;\n  if (process.env.NODE_ENV !== 'production') {\n    if (upperTheme === null && typeof localTheme === 'function' || themeId && upperTheme && !upperTheme[themeId] && typeof localTheme === 'function') {\n      console.error(['MUI: You are providing a theme function prop to the ThemeProvider component:', '<ThemeProvider theme={outerTheme => outerTheme} />', '', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\\n'));\n    }\n  }\n  const engineTheme = useThemeScoping(themeId, upperTheme, localTheme);\n  const privateTheme = useThemeScoping(themeId, upperPrivateTheme, localTheme, true);\n  return /*#__PURE__*/_jsx(MuiThemeProvider, {\n    theme: privateTheme,\n    children: /*#__PURE__*/_jsx(StyledEngineThemeContext.Provider, {\n      value: engineTheme,\n      children: children\n    })\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n  /**\n   * The design system's unique id for getting the corresponded theme when there are multiple design systems.\n   */\n  themeId: PropTypes.string\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\nexport default ThemeProvider;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"theme\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider as SystemThemeProvider } from '@mui/system';\nimport THEME_ID from './identifier';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function ThemeProvider(_ref) {\n  let {\n      theme: themeInput\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const scopedTheme = themeInput[THEME_ID];\n  return /*#__PURE__*/_jsx(SystemThemeProvider, _extends({}, props, {\n    themeId: scopedTheme ? THEME_ID : undefined,\n    theme: scopedTheme || themeInput\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired\n} : void 0;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport useThemeProps from '../styles/useThemeProps';\nimport GlobalStyles from '../GlobalStyles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const html = (theme, enableColorScheme) => _extends({\n  WebkitFontSmoothing: 'antialiased',\n  // Antialiasing.\n  MozOsxFontSmoothing: 'grayscale',\n  // Antialiasing.\n  // Change from `box-sizing: content-box` so that `width`\n  // is not affected by `padding` or `border`.\n  boxSizing: 'border-box',\n  // Fix font resize problem in iOS\n  WebkitTextSizeAdjust: '100%'\n}, enableColorScheme && !theme.vars && {\n  colorScheme: theme.palette.mode\n});\nexport const body = theme => _extends({\n  color: (theme.vars || theme).palette.text.primary\n}, theme.typography.body1, {\n  backgroundColor: (theme.vars || theme).palette.background.default,\n  '@media print': {\n    // Save printer ink.\n    backgroundColor: (theme.vars || theme).palette.common.white\n  }\n});\nexport const styles = (theme, enableColorScheme = false) => {\n  var _theme$components, _theme$components$Mui;\n  const colorSchemeStyles = {};\n  if (enableColorScheme && theme.colorSchemes) {\n    Object.entries(theme.colorSchemes).forEach(([key, scheme]) => {\n      var _scheme$palette;\n      colorSchemeStyles[theme.getColorSchemeSelector(key).replace(/\\s*&/, '')] = {\n        colorScheme: (_scheme$palette = scheme.palette) == null ? void 0 : _scheme$palette.mode\n      };\n    });\n  }\n  let defaultStyles = _extends({\n    html: html(theme, enableColorScheme),\n    '*, *::before, *::after': {\n      boxSizing: 'inherit'\n    },\n    'strong, b': {\n      fontWeight: theme.typography.fontWeightBold\n    },\n    body: _extends({\n      margin: 0\n    }, body(theme), {\n      // Add support for document.body.requestFullScreen().\n      // Other elements, if background transparent, are not supported.\n      '&::backdrop': {\n        backgroundColor: (theme.vars || theme).palette.background.default\n      }\n    })\n  }, colorSchemeStyles);\n  const themeOverrides = (_theme$components = theme.components) == null ? void 0 : (_theme$components$Mui = _theme$components.MuiCssBaseline) == null ? void 0 : _theme$components$Mui.styleOverrides;\n  if (themeOverrides) {\n    defaultStyles = [defaultStyles, themeOverrides];\n  }\n  return defaultStyles;\n};\n\n/**\n * Kickstart an elegant, consistent, and simple baseline to build upon.\n */\nfunction CssBaseline(inProps) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCssBaseline'\n  });\n  const {\n    children,\n    enableColorScheme = false\n  } = props;\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GlobalStyles, {\n      styles: theme => styles(theme, enableColorScheme)\n    }), children]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? CssBaseline.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n  /**\n   * Enable `color-scheme` CSS property to use `theme.palette.mode`.\n   * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme\n   * For browser support, check out https://caniuse.com/?search=color-scheme\n   * @default false\n   */\n  enableColorScheme: PropTypes.bool\n} : void 0;\nexport default CssBaseline;","import React from 'react';\nimport { ThemeProvider } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport theme from '../src/theme';\n\nexport const decorators = [\n  (Story) => (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Story />\n    </ThemeProvider>\n  ),\n];\n\nexport const parameters = {\n  actions: { argTypesRegex: '^on[A-Z].*' },\n  controls: {\n    matchers: {\n      date: /Date$/,\n    },\n  },\n  backgrounds: {\n    default: 'dark',\n    values: [\n      {\n        name: 'dark',\n        value: '#3E3E3E',\n      },\n      {\n        name: 'light',\n        value: '#EBEBEB',\n      },\n      {\n        name: 'secondary80',\n        value: '#656565',\n      },\n    ],\n  },\n};\n"],"names":["ThemeContext","React.createContext","ThemeContext$1","useTheme","React.useContext","hasSymbol","nested","mergeOuterLocalTheme","outerTheme","localTheme","ThemeProvider","props","children","theme","React.useMemo","output","_jsx","EMPTY_THEME","useThemeScoping","themeId","upperTheme","isPrivate","resolvedTheme","mergedTheme","result","_extends","useThemeWithoutDefault","upperPrivateTheme","usePrivateTheme","engineTheme","privateTheme","MuiThemeProvider","StyledEngineThemeContext","_excluded","_ref","themeInput","_objectWithoutPropertiesLoose","scopedTheme","THEME_ID","SystemThemeProvider","html","enableColorScheme","body","styles","_theme$components","_theme$components$Mui","colorSchemeStyles","key","scheme","_scheme$palette","defaultStyles","themeOverrides","CssBaseline","inProps","useThemeProps","_jsxs","React.Fragment","GlobalStyles","decorators","Story","React","parameters"],"mappings":"2YACA,MAAMA,EAA4BC,EAAAA,cAAoB,IAAI,EAI1DC,EAAeF,ECHA,SAASG,GAAW,CAMjC,OALcC,aAAiBJ,CAAY,CAM7C,CCTA,MAAMK,EAAY,OAAO,QAAW,YAAc,OAAO,IAC1CC,EAAAD,EAAY,OAAO,IAAI,YAAY,EAAI,mBCQtD,SAASE,EAAqBC,EAAYC,EAAY,CACpD,OAAI,OAAOA,GAAe,WACJA,EAAWD,CAAU,EAQpC,CACL,GAAGA,EACH,GAAGC,CACP,CACA,CAOA,SAASC,EAAcC,EAAO,CAC5B,KAAM,CACJ,SAAAC,EACA,MAAOH,CACR,EAAGE,EACEH,EAAaL,IAMbU,EAAQC,EAAAA,QAAc,IAAM,CAChC,MAAMC,EAASP,IAAe,KAAOC,EAAaF,EAAqBC,EAAYC,CAAU,EAC7F,OAAIM,GAAU,OACZA,EAAOT,CAAM,EAAIE,IAAe,MAE3BO,CACX,EAAK,CAACN,EAAYD,CAAU,CAAC,EAC3B,OAAoBQ,EAAI,IAAChB,EAAa,SAAU,CAC9C,MAAOa,EACP,SAAUD,CACd,CAAG,CACH,CC5CA,MAAMK,EAAc,CAAA,EACpB,SAASC,EAAgBC,EAASC,EAAYX,EAAYY,EAAY,GAAO,CAC3E,OAAOP,EAAa,QAAC,IAAM,CACzB,MAAMQ,EAAgBH,GAAUC,EAAWD,CAAO,GAAKC,EACvD,GAAI,OAAOX,GAAe,WAAY,CACpC,MAAMc,EAAcd,EAAWa,CAAa,EACtCE,EAASL,EAAUM,EAAS,CAAA,EAAIL,EAAY,CAChD,CAACD,CAAO,EAAGI,CACZ,CAAA,EAAIA,EAGL,OAAIF,EACK,IAAMG,EAERA,EAET,OAAOL,EAAUM,EAAS,CAAE,EAAEL,EAAY,CACxC,CAACD,CAAO,EAAGV,CACZ,CAAA,EAAIgB,EAAS,CAAA,EAAIL,EAAYX,CAAU,CACzC,EAAE,CAACU,EAASC,EAAYX,EAAYY,CAAS,CAAC,CACjD,CASA,SAASX,EAAcC,EAAO,CAC5B,KAAM,CACJ,SAAAC,EACA,MAAOH,EACP,QAAAU,CACD,EAAGR,EACES,EAAaM,EAAuBT,CAAW,EAC/CU,EAAoBC,EAAiB,GAAIX,EAMzCY,EAAcX,EAAgBC,EAASC,EAAYX,CAAU,EAC7DqB,EAAeZ,EAAgBC,EAASQ,EAAmBlB,EAAY,EAAI,EACjF,OAAoBO,EAAAA,IAAKe,EAAkB,CACzC,MAAOD,EACP,SAAuBd,EAAAA,IAAKgB,EAAyB,SAAU,CAC7D,MAAOH,EACP,SAAUjB,CAChB,CAAK,CACL,CAAG,CACH,CCzDA,MAAMqB,EAAY,CAAC,OAAO,EAMX,SAASvB,EAAcwB,EAAM,CAC1C,GAAI,CACA,MAAOC,CACb,EAAQD,EACJvB,EAAQyB,EAA8BF,EAAMD,CAAS,EACvD,MAAMI,EAAcF,EAAWG,CAAQ,EACvC,OAAoBtB,EAAI,IAACuB,EAAqBd,EAAS,CAAA,EAAId,EAAO,CAChE,QAAS0B,EAAcC,EAAW,OAClC,MAAOD,GAAeF,CACvB,CAAA,CAAC,CACJ,CCXO,MAAMK,EAAO,CAAC3B,EAAO4B,IAAsBhB,EAAS,CACzD,oBAAqB,cAErB,oBAAqB,YAIrB,UAAW,aAEX,qBAAsB,MACxB,EAAGgB,GAAqB,CAAC5B,EAAM,MAAQ,CACrC,YAAaA,EAAM,QAAQ,IAC7B,CAAC,EACY6B,EAAO7B,GAASY,EAAS,CACpC,OAAQZ,EAAM,MAAQA,GAAO,QAAQ,KAAK,OAC5C,EAAGA,EAAM,WAAW,MAAO,CACzB,iBAAkBA,EAAM,MAAQA,GAAO,QAAQ,WAAW,QAC1D,eAAgB,CAEd,iBAAkBA,EAAM,MAAQA,GAAO,QAAQ,OAAO,KACvD,CACH,CAAC,EACY8B,EAAS,CAAC9B,EAAO4B,EAAoB,KAAU,CAC1D,IAAIG,EAAmBC,EACvB,MAAMC,EAAoB,CAAA,EACtBL,GAAqB5B,EAAM,cAC7B,OAAO,QAAQA,EAAM,YAAY,EAAE,QAAQ,CAAC,CAACkC,EAAKC,CAAM,IAAM,CAC5D,IAAIC,EACJH,EAAkBjC,EAAM,uBAAuBkC,CAAG,EAAE,QAAQ,OAAQ,EAAE,CAAC,EAAI,CACzE,aAAcE,EAAkBD,EAAO,UAAY,KAAO,OAASC,EAAgB,IAC3F,CACA,CAAK,EAEH,IAAIC,EAAgBzB,EAAS,CAC3B,KAAMe,EAAK3B,EAAO4B,CAAiB,EACnC,yBAA0B,CACxB,UAAW,SACZ,EACD,YAAa,CACX,WAAY5B,EAAM,WAAW,cAC9B,EACD,KAAMY,EAAS,CACb,OAAQ,CACd,EAAOiB,EAAK7B,CAAK,EAAG,CAGd,cAAe,CACb,iBAAkBA,EAAM,MAAQA,GAAO,QAAQ,WAAW,OAC3D,CACP,CAAK,CACF,EAAEiC,CAAiB,EACpB,MAAMK,GAAkBP,EAAoB/B,EAAM,aAAe,OAAiBgC,EAAwBD,EAAkB,iBAAmB,KAAvE,OAAuFC,EAAsB,eACrL,OAAIM,IACFD,EAAgB,CAACA,EAAeC,CAAc,GAEzCD,CACT,EAKA,SAASE,EAAYC,EAAS,CAC5B,MAAM1C,EAAQ2C,EAAc,CAC1B,MAAOD,EACP,KAAM,gBACV,CAAG,EACK,CACJ,SAAAzC,EACA,kBAAA6B,EAAoB,EACrB,EAAG9B,EACJ,OAAoB4C,EAAAA,KAAMC,EAAAA,SAAgB,CACxC,SAAU,CAAcxC,EAAI,IAACyC,EAAc,CACzC,OAAQ5C,GAAS8B,EAAO9B,EAAO4B,CAAiB,CACjD,CAAA,EAAG7B,CAAQ,CAChB,CAAG,CACH,CC7EO,MAAM8C,EAAa,CACvBC,GACCC,EAAA,cAAClD,EAAc,CAAA,MAAAG,CAAA,kBACZuC,EAAY,IAAA,EACZQ,EAAA,cAAAD,EAAA,IAAM,CACT,CAEJ,EAEaE,EAAa,CACxB,QAAS,CAAE,cAAe,YAAa,EACvC,SAAU,CACR,SAAU,CACR,KAAM,OACR,CACF,EACA,YAAa,CACX,QAAS,OACT,OAAQ,CACN,CACE,KAAM,OACN,MAAO,SACT,EACA,CACE,KAAM,QACN,MAAO,SACT,EACA,CACE,KAAM,cACN,MAAO,SACT,CACF,CACF,CACF","x_google_ignoreList":[0,1,2,3,4,5,6]}