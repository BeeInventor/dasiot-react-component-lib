{"version":3,"file":"StatusDropdown.stories-3e620055.js","sources":["../../src/svg/ArrowDown.tsx","../../src/components/Dropdown/StatusDropdown/StatusDropdown.tsx"],"sourcesContent":["import * as React from 'react';\nimport { SVGProps } from 'react';\n\nconst ArrowDown: React.FC = (props: SVGProps<SVGSVGElement>) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={32}\n    height={32}\n    fill=\"none\"\n    {...props}\n  >\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M12.407 13.393a1 1 0 0 0-1.414 1.414l4.2 4.2a1.002 1.002 0 0 0 1.414 0l4.2-4.2a1 1 0 0 0-1.414-1.414L15.9 16.886l-3.493-3.493Z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>\n);\nexport default ArrowDown;\n","import React, { HTMLAttributes, useEffect, useRef, useState } from 'react';\nimport {\n  styled,\n  Popper as MuiPopper,\n  PopperProps,\n  Paper as MuiPaper,\n  ClickAwayListener,\n} from '@mui/material';\n\nimport ArrowDown from '../../../svg/ArrowDown';\n\ninterface ContainerProps extends HTMLAttributes<HTMLButtonElement> {\n  color?: React.CSSProperties['color'];\n  bgColor?: React.CSSProperties['backgroundColor'];\n  disabled?: boolean;\n}\n\nconst shouldForwardProp = (propName: PropertyKey) => {\n  return propName !== 'color' && propName !== 'bgColor';\n};\n\nconst Container = styled('button', { shouldForwardProp })<ContainerProps>`\n  cursor: pointer;\n  display: inline-flex;\n  align-items: center;\n  min-width: 120px;\n  text-transform: uppercase;\n  font-size: 1rem;\n  line-height: 1.5;\n  font-weight: 500;\n  border-radius: 4px;\n  color: ${({ color }) => color ?? '#fff'};\n  padding: 0 10px 0 26px;\n  background-color: ${({ bgColor, theme }) =>\n    bgColor ?? theme.color.secondary.$60};\n  border: none;\n\n  &:disabled {\n    opacity: 0.3;\n    pointer-events: none;\n  }\n`;\n\nconst Popper = styled(MuiPopper)`\n  &.MuiPopper-root {\n    z-index: 1;\n  }\n`;\n\nconst Paper = styled(MuiPaper)`\n  & > ul {\n    list-style: none;\n    padding: 0;\n    margin: 0;\n    & > li {\n      padding: 5px;\n    }\n  }\n`;\n\ninterface ItemProps {\n  color?: React.CSSProperties['color'];\n}\n\nconst Item = styled('div')<ItemProps>`\n  cursor: pointer;\n  text-transform: uppercase;\n  color: ${({ theme }) => theme.color.secondary.$60};\n  padding: 5.5px 8px;\n  border-radius: 4px;\n\n  &.selected {\n    color: ${({ theme }) => theme.color.secondary.$100};\n    pointer-events: none;\n  }\n\n  &:hover {\n    color: ${({ theme }) => theme.color.secondary.$100};\n    background-color: ${({ theme }) => theme.color.box_bbg};\n  }\n\n  &::before {\n    display: inline-block;\n    content: '';\n    width: 14px;\n    height: 14px;\n    border-radius: 4px;\n    background-color: ${({ color, theme }) =>\n      color ?? theme.color.secondary.$60};\n    margin-right: 17px;\n  }\n`;\n\nexport interface StatusDropdownProps {\n  defaultStatus?: string;\n  statusMap: {\n    [status: string]: {\n      color?: React.CSSProperties['color'];\n      bgColor?: React.CSSProperties['backgroundColor'];\n      displayName: string;\n    };\n  };\n  disabled?: boolean;\n  popperProps?: PopperProps;\n  onSelect?: (status: string) => void;\n}\n\nconst StatusDropdown: React.FC<StatusDropdownProps> = ({\n  defaultStatus,\n  statusMap,\n  disabled,\n  popperProps,\n  onSelect,\n}) => {\n  const entries = Object.entries(statusMap);\n  const [status, setStatus] = useState(defaultStatus ?? entries[0][0]);\n  const [open, setOpen] = useState(false);\n  const buttonRef = useRef<HTMLButtonElement | null>(null);\n\n  useEffect(() => {\n    if (defaultStatus) {\n      setStatus(defaultStatus);\n    }\n  }, [defaultStatus]);\n\n  return (\n    <>\n      <Container\n        ref={buttonRef}\n        color={statusMap[status].color}\n        bgColor={statusMap[status].bgColor}\n        onClick={() => setOpen(!open)}\n        disabled={disabled}\n      >\n        {statusMap[status].displayName}\n        <ArrowDown />\n      </Container>\n      <Popper\n        open={open}\n        anchorEl={buttonRef.current}\n        placement=\"bottom-start\"\n        disablePortal\n        popperOptions={{\n          modifiers: [\n            {\n              name: 'offset',\n              options: {\n                offset: [0, 8],\n              },\n            },\n          ],\n        }}\n        {...popperProps}\n      >\n        <ClickAwayListener onClickAway={() => setOpen(false)}>\n          <Paper>\n            <ul>\n              {entries.map(([key, value]) => {\n                return (\n                  <li\n                    key={`status-item-${key}`}\n                    onClick={() => {\n                      setStatus(key);\n                      setOpen(false);\n                      onSelect?.(key);\n                    }}\n                  >\n                    <Item\n                      className={`${key === status ? 'selected' : ''}`}\n                      color={value.bgColor}\n                    >\n                      {value.displayName}\n                    </Item>\n                  </li>\n                );\n              })}\n            </ul>\n          </Paper>\n        </ClickAwayListener>\n      </Popper>\n    </>\n  );\n};\n\nexport default StatusDropdown;\n"],"names":["ArrowDown","props","React.createElement","shouldForwardProp","propName","Container","styled","color","bgColor","theme","Popper","MuiPopper","Paper","MuiPaper","Item","StatusDropdown","defaultStatus","statusMap","disabled","popperProps","onSelect","entries","status","setStatus","useState","open","setOpen","buttonRef","useRef","useEffect","React","ClickAwayListener","key","value"],"mappings":"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"}